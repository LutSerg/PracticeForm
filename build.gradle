plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'com.asteroster'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.21.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:6.12.3",
            "org.junit.jupiter:junit-jupiter:5.9.2",
            "org.slf4j:slf4j-simple:2.0.7",
            "com.github.javafaker:javafaker:1.0.2",
            'io.qameta.allure:allure-selenide:2.21.0',
            "org.aspectj:aspectjweaver:1.9.19"
    )
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

task practice_form(type: Test) {
    useJUnitPlatform {
        includeTags("practice_form")
    }
}

task simple_property(type: Test) {
    useJUnitPlatform {
        includeTags("simple_property")
        systemProperties(System.getProperties())
    }
}

task many_properties_test(type: Test) {
    useJUnitPlatform {
        includeTags("many_properties")
        systemProperties(System.getProperties())
    }
}

task hello_test(type: Test) {
    useJUnitPlatform {
        includeTags("hello")
        systemProperties(System.getProperties())
    }
}